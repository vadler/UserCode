
module allLayer1Jets = PATJetProducer {

  ### General configurables
  InputTag jetSource               = allLayer0Jets               # uncalibrated reco jet input source
  bool     embedCaloTowers         = true                        # switch on/off embedding of supercluster (externally stored in AOD)

  ### Jet flavour idetification configurables
  bool     getJetMCFlavour         = true                        # switch on/off MC flavour identification of all jets
  InputTag JetPartonMapSource      = jetFlavourAssociation       # the match-collection, produced by default from PATHighLevelReco.cff

  ### MC matching configurables
  bool     addGenPartonMatch       = true                        # switch on/off matching to partons
  InputTag genPartonMatch          = jetPartonMatch              # particles source to be used for the matching
  bool     addGenJetMatch          = true                        # switch on/off matching to GenJet's
  InputTag genJetMatch             = jetGenJetMatch              # GenJet source to be used for the matching
  bool     addPartonJetMatch       = false                       # switch on/off matching to PartonJet's (not implemented yet)
  InputTag partonJetSource         = nonsenseName                # ParticleJet source to be used for the matching
  
  ### Trigger matching configurables
  bool      addTrigMatch     = true                     # switch on/off matching to trigger primitives
  VInputTag trigPrimMatch    = { jetTrigMatchHLT1ElectronRelaxed,
                                 jetTrigMatchHLT2jet }
                                                        # trigger primitive sources to be used for the matching

  ### Jet energy scale correction configurables
  bool     addJetCorrFactors       = true
  InputTag jetCorrFactorsSource    = layer0JetCorrFactors        # source of the valuemap containing the jet correction factors

  ### Resolution configurables
  bool     addResolutions          = true                        # switch on/off the resolution calculation
  bool     useNNResolutions        = false                       # use the neural network approach?
  string   caliJetResoFile         = "PhysicsTools/PatUtils/data/Resolutions_lJets_MCJetCorJetIcone5.root"
                                                                 # input root file for the resolution functions
  string   caliBJetResoFile        = "PhysicsTools/PatUtils/data/Resolutions_bJets_MCJetCorJetIcone5.root"
                                                                 # input root file for the resolution functions

  ### b-Tag info configurables
  bool     addBTagInfo             = true                        # switch on/off the addition of b-tag information
  bool     addDiscriminators       = true                        # switch on/off the addition of the btag discriminators
  InputTag discriminatorModule     = layer0BTags                 # meta-module which provides the list of discriminators.
                                                                 # do not specify an instance label!
  vstring  discriminatorNames      = { "*"                       # "*" means all
     #"combinedSVJetTags", "combinedSVMVAJetTags", "impactParameterMVAJetTags", "jetProbabilityJetTags", "softElectronJetTags", "softMuonJetTags", 
     #"softMuonNoIPJetTags", "trackCountingHighEffJetTags", "trackCountingHighPurJetTags"
  } 
  bool     addTagInfoRefs          = true
  InputTag tagInfoModule           = layer0TagInfos
  vstring  tagInfoNames            = { "secondaryVertexTagInfos", "softElectronTagInfos", "softMuonTagInfos", "impactParameterTagInfos" }

  ### track association configurables
  bool     addAssociatedTracks     = true                        # switch on/off track association
  InputTag trackAssociationSource  = layer0JetTracksAssociator   # the track association parameter set

  ### Jet charge configurables
  bool     addJetCharge            = true                         # switch on/off jet charge calculation
  InputTag jetChargeSource         = layer0JetCharge              # the jet charge parameter set

}
 
