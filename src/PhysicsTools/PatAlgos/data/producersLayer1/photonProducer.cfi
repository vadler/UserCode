
module allLayer1Photons = PATPhotonProducer {

  ### General configurables
  InputTag photonSource      = allLayer0Photons   # cleaned photons from AOD
  bool     embedSuperCluster = false              # whether to embed in AOD externally stored supercluster

  ### MC matching configurables
  bool     addGenMatch       = true               # switch on/off matching to generator level
  InputTag genParticleMatch  = photonMatch        # particles source to be used for the matching
  
  ### Trigger matching configurables
  bool      addTrigMatch     = true                     # switch on/off matching to trigger primitives
  VInputTag trigPrimMatch    = { photonTrigMatchHLT1PhotonRelaxed }
                                                        # trigger primitive sources to be used for the matching

  ### Isolation configurables
  PSet isolation = {
     PSet tracker = {
        // input IsoDeposit
        InputTag src = layer0PhotonIsolations:gamIsoDepositTk
        // parameters to compute isolation (Egamma POG defaults)
        double  deltaR = 0.3
        vstring vetos = {"0.015",            # Inner DR Veto
                         "Threshold(1.0)"}   # Minimum Tk Pt
        bool skipDefaultVeto = true
     }
     PSet ecal = { 
        // input IsoDeposit
        InputTag src = layer0PhotonIsolations:gamIsoDepositEcalFromClusts
        // parameters to compute isolation (Egamma POG defaults)
        double  deltaR = 0.4
        vstring vetos = { "EcalBarrel:0.045",   # inner cone veto (barrel, |eta| < 1.479)
                         "EcalEndcaps:0.070"  } # inner cone veto (endcaps, |eta| >= 1.479)
        bool skipDefaultVeto = true
     }
     #other option, using eleIsoDepositEcalSCVetoFromClust
     #PSet ecal = { 
     #   // input IsoDeposit
     #   InputTag src = layer0PhotonIsolations:gamIsoDepositEcalFromClusts
     #   // parameters to compute isolation (Egamma POG defaults)
     #   double  deltaR = 0.4
     #   vstring vetos = {} # no veto, already done with SC
     #   bool skipDefaultVeto = true
     #}
     PSet hcal = { 
        // input IsoDeposit
        InputTag src = layer0PhotonIsolations:gamIsoDepositHcalFromTowers
        // parameters to compute isolation (Egamma POG defaults)
        double deltaR = 0.4
        bool skipDefaultVeto = true # no inner cone veto
     }
     VPSet user = { }

  }
  PSet isoDeposits = {
    InputTag tracker =  layer0PhotonIsolations:gamIsoDepositTk
    InputTag ecal    =  layer0PhotonIsolations:gamIsoDepositEcalFromClusts
    InputTag hcal    =  layer0PhotonIsolations:gamIsoDepositHcalFromTowers
  }

}
