include "PhysicsTools/PatAlgos/data/triggerLayer0/patTrigProducer.cfi"

/// Examples for configurations of the trigger match for various physics objects
/// (cuts are NOT tuned, using old values from TQAF MC match, january 2008)


## matches to Egamma triggers

# matches to HLT1Photon

module photonTrigMatchHLT1Photon = PATTrigMatcher {
    InputTag src               = allLayer0Photons
    InputTag matched           = patHLT1Photon
    double maxDeltaR           = 0.2
    double maxDPtRel           = 1.0
    bool resolveAmbiguities    = true
    bool resolveByMatchQuality = false
}

sequence patTrigMatchHLT1Photon = {
    patHLT1Photon,
    photonTrigMatchHLT1Photon
}

# matches to HLT1PhotonRelaxed

module photonTrigMatchHLT1PhotonRelaxed = PATTrigMatcher {
     InputTag src               = allLayer0Photons
     InputTag matched           = patHLT1PhotonRelaxed
     double maxDeltaR           = 0.2
     double maxDPtRel           = 1.0
     bool resolveAmbiguities    = true
     bool resolveByMatchQuality = false
}

sequence patTrigMatchHLT1PhotonRelaxed = {
    patHLT1PhotonRelaxed,
    photonTrigMatchHLT1PhotonRelaxed
}

# matches to HLT2Photon

module photonTrigMatchHLT2Photon = PATTrigMatcher {
     InputTag src               = allLayer0Photons
     InputTag matched           = patHLT2Photon
     double maxDeltaR           = 0.2
     double maxDPtRel           = 1.0
     bool resolveAmbiguities    = true
     bool resolveByMatchQuality = false
}

sequence patTrigMatchHLT2Photon = {
    patHLT2Photon,
    photonTrigMatchHLT2Photon
}

# matches to HLT2PhotonRelaxed

module photonTrigMatchHLT2PhotonRelaxed = PATTrigMatcher {
     InputTag src               = allLayer0Photons
     InputTag matched           = patHLT2PhotonRelaxed
     double maxDeltaR           = 0.2
     double maxDPtRel           = 1.0
     bool resolveAmbiguities    = true
     bool resolveByMatchQuality = false
}

sequence patTrigMatchHLT2PhotonRelaxed = {
    patHLT2PhotonRelaxed,
    photonTrigMatchHLT2PhotonRelaxed
}

# matches to HLT1Electron

module electronTrigMatchHLT1Electron = PATTrigMatcher {
   InputTag src               = allLayer0Electrons
   InputTag matched           = patHLT1Electron
   double maxDeltaR           = 0.5
   double maxDPtRel           = 0.5
   bool resolveAmbiguities    = true
   bool resolveByMatchQuality = false
}

sequence patTrigMatchHLT1Electron = {
    patHLT1Electron,
    electronTrigMatchHLT1Electron
}

# matches to HLT1ElectronRelaxed
# including example of "wrong" match (jets which fired electron trigger)

module electronTrigMatchHLT1ElectronRelaxed = PATTrigMatcher {
   InputTag src               = allLayer0Electrons
   InputTag matched           = patHLT1ElectronRelaxed
   double maxDeltaR           = 0.5
   double maxDPtRel           = 0.5
   bool resolveAmbiguities    = true
   bool resolveByMatchQuality = false
}

module jetTrigMatchHLT1ElectronRelaxed = PATTrigMatcher {
   InputTag src               = allLayer0Jets
   InputTag matched           = patHLT1ElectronRelaxed
   double maxDeltaR           = 0.5
   double maxDPtRel           = 0.5
   bool resolveAmbiguities    = true
   bool resolveByMatchQuality = false
}

sequence patTrigMatchHLT1ElectronRelaxed = {
    patHLT1ElectronRelaxed,
    ( 
        electronTrigMatchHLT1ElectronRelaxed &
        jetTrigMatchHLT1ElectronRelaxed
    )
} 

# matches to HLT2Electron

module electronTrigMatchHLT2Electron = PATTrigMatcher {
   InputTag src               = allLayer0Electrons
   InputTag matched           = patHLT2Electron
   double maxDeltaR           = 0.5
   double maxDPtRel           = 0.5
   bool resolveAmbiguities    = true
   bool resolveByMatchQuality = false
}

sequence patTrigMatchHLT2Electron = {
    patHLT2Electron,
    electronTrigMatchHLT2Electron
}

# matches to HLT2ElectronRelaxed

module electronTrigMatchHLT2ElectronRelaxed = PATTrigMatcher {
   InputTag src               = allLayer0Electrons
   InputTag matched           = patHLT2ElectronRelaxed
   double maxDeltaR           = 0.5
   double maxDPtRel           = 0.5
   bool resolveAmbiguities    = true
   bool resolveByMatchQuality = false
}

sequence patTrigMatchHLT2ElectronRelaxed = {
    patHLT2ElectronRelaxed,
    electronTrigMatchHLT2ElectronRelaxed
}


## matches to Muon triggers

# matches to HLT1MuonIso

module muonTrigMatchHLT1MuonIso = PATTrigMatcher {
   InputTag src               = allLayer0Muons
   InputTag matched           = patHLT1MuonIso
   double maxDeltaR           = 0.5
   double maxDPtRel           = 0.5
   bool resolveAmbiguities    = true
   bool resolveByMatchQuality = false
}

sequence patTrigMatchHLT1MuonIso = {
    patHLT1MuonIso,
    muonTrigMatchHLT1MuonIso
}

# matches to HLT1MuonNonIso

module muonTrigMatchHLT1MuonNonIso = PATTrigMatcher {
   InputTag src               = allLayer0Muons
   InputTag matched           = patHLT1MuonNonIso
   double maxDeltaR           = 0.5
   double maxDPtRel           = 0.5
   bool resolveAmbiguities    = true
   bool resolveByMatchQuality = false
}

sequence patTrigMatchHLT1MuonNonIso = {
    patHLT1MuonNonIso,
    muonTrigMatchHLT1MuonNonIso
}

# matches to HLT2MuonNonIso

module muonTrigMatchHLT2MuonNonIso = PATTrigMatcher {
   InputTag src               = allLayer0Muons
   InputTag matched           = patHLT2MuonNonIso
   double maxDeltaR           = 0.5
   double maxDPtRel           = 0.5
   bool resolveAmbiguities    = true
   bool resolveByMatchQuality = false
}

sequence patTrigMatchHLT2MuonNonIso = {
    patHLT2MuonNonIso,
    muonTrigMatchHLT2MuonNonIso
}


## matches to BTau triggers

# matches to HLT1Tau

module tauTrigMatchHLT1Tau = PATTrigMatcher {
   InputTag src               = allLayer0Taus
   InputTag matched           = patHLT1Tau
   double maxDeltaR           = 0.5
   double maxDPtRel           = 0.5
   bool resolveAmbiguities    = true
   bool resolveByMatchQuality = false
}
 
sequence patTrigMatchHLT1Tau = {
    patHLT1Tau,
    tauTrigMatchHLT1Tau
}

# matches to HLT2TauPixel

module tauTrigMatchHLT2TauPixel = PATTrigMatcher {
   InputTag src               = allLayer0Taus
   InputTag matched           = patHLT2TauPixel
   double maxDeltaR           = 0.5
   double maxDPtRel           = 0.5
   bool resolveAmbiguities    = true
   bool resolveByMatchQuality = false
}
 
sequence patTrigMatchHLT2TauPixel = {
    patHLT2TauPixel,
    tauTrigMatchHLT2TauPixel
}


## matches to JetMET triggers

# matches to HLT2Jet

module jetTrigMatchHLT2Jet = PATTrigMatcher {
   InputTag src               = allLayer0Jets
   InputTag matched           = patHLT2Jet
   double maxDeltaR           = 0.4
   double maxDPtRel           = 3.0
   bool resolveAmbiguities    = true
   bool resolveByMatchQuality = false
}

sequence patTrigMatchHLT2Jet = {
    patHLT2Jet,
    jetTrigMatchHLT2Jet
}

# matches to HLT3Jet

module jetTrigMatchHLT3Jet = PATTrigMatcher {
   InputTag src               = allLayer0Jets
   InputTag matched           = patHLT3Jet
   double maxDeltaR           = 0.4
   double maxDPtRel           = 3.0
   bool resolveAmbiguities    = true
   bool resolveByMatchQuality = false
}

sequence patTrigMatchHLT3Jet = {
    patHLT3Jet,
    jetTrigMatchHLT3Jet
}

# matches to HLT4Jet

module jetTrigMatchHLT4Jet = PATTrigMatcher {
   InputTag src               = allLayer0Jets
   InputTag matched           = patHLT4Jet
   double maxDeltaR           = 0.4
   double maxDPtRel           = 3.0
   bool resolveAmbiguities    = true
   bool resolveByMatchQuality = false
}

sequence patTrigMatchHLT4Jet = {
    patHLT4Jet,
    jetTrigMatchHLT4Jet
}

# matches to HLT1MET65
# including example of "wrong" match (muons which fired MET trigger)

module metTrigMatchHLT1MET65 = PATTrigMatcher {
   InputTag src               = allLayer0METs
   InputTag matched           = patHLT1MET65
   double maxDeltaR           = 0.4
   double maxDPtRel           = 3.0
   bool resolveAmbiguities    = true
   bool resolveByMatchQuality = false
}

module muonTrigMatchHLT1MET65 = PATTrigMatcher {
   InputTag src               = allLayer0Muons
   InputTag matched           = patHLT1MET65
   double maxDeltaR           = 0.4
   double maxDPtRel           = 3.0
   bool resolveAmbiguities    = true
   bool resolveByMatchQuality = false
}

sequence patTrigMatchHLT1MET65 = {
    patHLT1MET65,
    (
        metTrigMatchHLT1MET65 &
        muonTrigMatchHLT1MET65
    )
}


## matches to Xchannel triggers


## matches to Special triggers
