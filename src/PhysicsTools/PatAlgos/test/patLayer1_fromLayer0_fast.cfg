process PATbis = {


  ### General ###

  # initialize MessageLogger
  include "FWCore/MessageLogger/data/MessageLogger.cfi"
  replace MessageLogger.cerr.threshold = "INFO"

  # return filter & timing reports
  untracked PSet options = { untracked bool wantSummary = true }


  ### Input ###

  untracked PSet maxEvents = { untracked int32 input = 100 }

  source = PoolSource {
    untracked vstring fileNames = { 'file:PATLayer0_Output.fromAOD_fast.root' }
  }


  ### PAT steering ###

  include "PhysicsTools/PatAlgos/data/patLayer1.cff"
#include "PhysicsTools/PatAlgos/test/patLayer1_ReplaceDefaults_fast.cff"
  # when not using the replaces, you need the following instead
  include "PhysicsTools/PatAlgos/data/famos/patLayer1_FamosSetup.cff"

  module content = EventContentAnalyzer{}
  path p = {
//     content,    # uncomment this to get a printout of the event content before Layer1
    patLayer1
  }


  ### Output ###

  # define the event content
  block patEventContent = {
    untracked vstring outputCommands = {
      "drop *"
    }
  }
  include "PhysicsTools/PatAlgos/data/patLayer1_EventContent.cff"
  replace patEventContent.outputCommands += patLayer1EventContent.outputCommands

  # only accept events passing the complete path
  block patEventSelection = {
    untracked PSet SelectEvents = {
      vstring SelectEvents = { "p" }
    }
  }

  # the actual output module
  module out = PoolOutputModule {
    untracked string fileName = "PATLayer1_Output.fromLayer0_fast.root"
    using patEventSelection
    using patEventContent
    untracked bool verbose = false
  }

  endpath outpath = { out }


}
