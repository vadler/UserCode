process PAT = {


  ### General ###

  # initialize MessageLogger
  include "FWCore/MessageLogger/data/MessageLogger.cfi"
  replace MessageLogger.cerr.threshold = "INFO"
  replace MessageLogger.categories += "PATLayer0Summary"
  replace MessageLogger.cerr.INFO = {
      untracked PSet default = { untracked int32 limit = 0  }
      untracked PSet PATLayer0Summary = { untracked int32 limit = -1 }
  }

  # return filter & timing reports
  untracked PSet options = { untracked bool wantSummary = true }


  ### Input ###

  untracked PSet maxEvents = { untracked int32 input = 100 }

  source = PoolSource { untracked vstring fileNames = { 'file:/afs/cern.ch/cms/PRS/top/cmssw-data/relval200-for-pat-testing/RelValTTbar-200p7-AODSIM.100.root' } }

  ### PAT steering ###

  include "PhysicsTools/PatAlgos/data/patLayer0.cff"
  #include "PhysicsTools/PatAlgos/test/patLayer0_ReplaceDefaults_full.cff" # NOTE: it won't work with this uncommented
                                                                           # read below for more details
  include "PhysicsTools/PatAlgos/data/patLayer1.cff"
  #include "PhysicsTools/PatAlgos/test/patLayer1_ReplaceDefaults_full.cff"
 
  module content = EventContentAnalyzer { }

  # --------- Layer 0 ----------
  # pull in the sequences  
  include "PhysicsTools/PatAlgos/data/recoLayer0/genericTrackCandidates.cff"
  include "PhysicsTools/PatAlgos/data/cleaningLayer0/genericTrackCleaner.cfi"
  # add in MC match
  module  trackMuMatch = muonMatch from "PhysicsTools/PatAlgos/data/mcMatchLayer0/muonMatch.cfi"
  replace trackMuMatch.src = allLayer0TrackCands
  # and trigger match (can't use clone+replace as same cf* file defines multiple modules)
  ##block trackTriggerMatch = {
  ##      InputTag src               = allLayer0TrackCands
  ##      double maxDeltaR           = 0.5
  ##      double maxDPtRel           = 0.5
  ##      bool resolveAmbiguities    = true
  ##      bool resolveByMatchQuality = false
  ##}
  ##module  trackTrigMatchL1SingleMu3 = PATTrigMatcher { 
  ##   InputTag matched = patL1SingleMu3
  ##   using trackTriggerMatch
  ##}
  ##module  trackTrigMatchHLT1MuonIso = PATTrigMatcher { 
  ##   InputTag matched = patHLT1MuonIso
  ##   using trackTriggerMatch
  ##}
  ##module  trackTrigMatchHLT1MuonNonIso = PATTrigMatcher { 
  ##   InputTag matched = patHLT1MuonNonIso
  ##   using trackTriggerMatch
  ##}
  ##module  trackTrigMatchHLT2MuonNonIso = PATTrigMatcher { 
  ##   InputTag matched = patHLT2MuonNonIso
  ##   using trackTriggerMatch
  ##}
  ##sequence trackTrigMatches = { 
  ##      patHLT1MuonIso, patHLT2MuonNonIso, # these are not run by default (I don't know why)
  ##      trackTrigMatchL1SingleMu3, trackTrigMatchHLT1MuonIso, trackTrigMatchHLT1MuonNonIso, trackTrigMatchHLT2MuonNonIso 
  ##}
  # --------- Layer 1 ----------
  module allLayer1TrackCands = allLayer1GenericParticles from "PhysicsTools/PatAlgos/data/producersLayer1/genericParticleProducer.cfi"
  replace allLayer1TrackCands.src = allLayer0TrackCands
  replace allLayer1TrackCands.addGenMatch      = true
  replace allLayer1TrackCands.genParticleMatch = trackMuMatch
  ##replace allLayer1TrackCands.addTrigMatch  =  true
  ##replace allLayer1TrackCands.trigPrimMatch = {trackTrigMatchL1SingleMu3, # L1
  ##                                             trackTrigMatchHLT1MuonIso,trackTrigMatchHLT1MuonNonIso,trackTrigMatchHLT2MuonNonIso} #HLT
  replace allLayer1TrackCands.isolation.tracker.src =  layer0TrackIsolations:patAODTrackIsoDepositCtfTk
  replace allLayer1TrackCands.isolation.ecal.src    =  layer0TrackIsolations:patAODTrackIsoDepositCalByAssociatorTowersecal
  replace allLayer1TrackCands.isolation.hcal.src    =  layer0TrackIsolations:patAODTrackIsoDepositCalByAssociatorTowershcal
  replace allLayer1TrackCands.isoDeposits.tracker = layer0TrackIsolations:patAODTrackIsoDepositCtfTk
  replace allLayer1TrackCands.isoDeposits.ecal    = layer0TrackIsolations:patAODTrackIsoDepositCalByAssociatorTowersecal
  replace allLayer1TrackCands.isoDeposits.hcal    = layer0TrackIsolations:patAODTrackIsoDepositCalByAssociatorTowershcal

  module selectedLayer1TrackCands = PATGenericParticleSelector { 
      InputTag src = allLayer1TrackCands
      string   cut = "(pt > 15.) && (caloIso < 10.)"
  }
  # ----------------------------

  path p = {
    #patLayer0_TriggerMatch,                # use patLayer0_withoutPFTau if you can't get PFTaus working 
    # vvvv------ all the following is inside patLayer0_TriggerMatch
    patBeforeLevel0Reco,
    patAODTrackCandSequence,   # << ADDED
    // unpacking also patLayer0Cleaners,
      allLayer0Muons, allLayer0Electrons, allLayer0Photons, allLayer0Taus,
      allLayer0TrackCands,     # << ADDED
      allLayer0Jets, allLayer0METs,
    // end of patLayer0Cleaners
    patHighLevelReco,
    patMCTruth,
    patTrigMatch, 
    trackMuMatch,     # << ADDED 
    ##trackTrigMatches, # << ADDED # << NO TRIGGER IN 2.X
    patLayer0TrackCandSequence,     # << ADDED remaining part of Reco
    # ^^^^------
    content,                            # uncomment to get a dump of the event content
    patLayer1,
    allLayer1TrackCands,    # << ADDED
   selectedLayer1TrackCands # << ADDED
  }


  ### Output ###

  # define the event content
  block patEventContent = {
    untracked vstring outputCommands = {
      "drop *"
    }
  }
  include "PhysicsTools/PatAlgos/data/patLayer1_EventContent.cff"
  replace patEventContent.outputCommands += patLayer1EventContent.outputCommands
  replace patEventContent.outputCommands += "keep *_selectedLayer1TrackCands_*_*" # << ADDED

  # only accept events passing the complete path
  block patEventSelection = {
    untracked PSet SelectEvents = {
      vstring SelectEvents = { "p" }
    }
  }

  # the actual output module
  module out = PoolOutputModule {
    untracked string fileName = "PATLayer1_Output.fromAOD_genericTracks_full.root"
    using patEventSelection
    using patEventContent
    untracked bool verbose = false
  }

  endpath outpath = { out }


}
